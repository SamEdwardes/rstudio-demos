---
title: "Posit Team Links"
format:
  dashboard:
    nav-buttons: [github]
    link-external-icon: true
    link-external-newwindow: true
    scrolling: true
---

# Posit Team

## Row

### Column <> Demo {.tabset}

:::{.card title="General"}

**Environments**:

- <https://current.posit.team> (primary demo environment)
- <https://palm.ptd.posit.it> (running the dailies)
- <https://demo.posit.team> (this is for DevRel)
- <https://colorado.posit.co> (old demo environment)

**Workbench Session Images**:

```bash {.flow .code-overflow-wrap}
# See sol-eng/pro-product-images for latest image builds:
# https://github.com/sol-eng/pro-product-images/actions/workflows/build-r-session-complete-adhoc%20copy%202.yaml

654654567442.dkr.ecr.us-east-2.amazonaws.com/ptd-adhoc-pwb:session-jammy-daily-2024.04.2-764.pro1

654654567442.dkr.ecr.us-east-2.amazonaws.com/ptd-adhoc-pwb:session-jammy-daily-2024.07.0-daily-305.pro2

654654567442.dkr.ecr.us-east-2.amazonaws.com/ptd-adhoc-pwb:session-jammy-daily-2024.08.0-351.pro19

654654567442.dkr.ecr.us-east-2.amazonaws.com/ptd-adhoc-pwb:session-jammy-daily-2024.09.0-375.pro3
```

**Example code**:

- Generic demos: <https://github.com/SamEdwardes/rstudio-demos>

:::

:::{.card title="Databricks"}

**Environments**

- Posit team: <https://databricks.posit.team>

    ```bash {.flow .code-overflow-wrap}
    # See sol-eng/pro-product-images for latest image builds:
    # https://github.com/sol-eng/pro-product-images/actions/workflows/build-r-session-complete-adhoc%20copy%202.yaml
    654654567442.dkr.ecr.us-east-2.amazonaws.com/ptd-adhoc-pwb:session-jammy-daily-2024.04.2-764.pro1
    654654567442.dkr.ecr.us-east-2.amazonaws.com/ptd-adhoc-pwb:session-jammy-daily-2024.07.0-daily-305.pro2
    654654567442.dkr.ecr.us-east-2.amazonaws.com/ptd-adhoc-pwb:session-jammy-daily-2024.08.0-351.pro19
    ```

- Databricks: <https://adb-3256282566390055.15.azuredatabricks.net/> (use the `sol_eng_demo_nickp` catalog)

**Example code**

- <https://github.com/sol-eng/databricks_demo>

**Docs**

- [Using sparklyr with Databricks](https://spark.rstudio.com/deployment/databricks-cluster.html)
- [Option 1 - Connecting to Databricks remotely](https://spark.rstudio.com/deployment/databricks-cluster-remote.html)
- [Option 2 - Working inside of Databricks](https://spark.rstudio.com/deployment/databricks-cluster-local.html)
- [YouTube: Databricks x Posit | Improved Productivity for your Data Teams](https://www.youtube.com/live/iShpyDxzMeE?si=uAqiZEwUJaNd5Tci)
- [YouTube: Predicting Lending Rates with Databricks, tidymodels, and Posit Team](https://youtu.be/qIzKJKcmh-s?si=yZpiwFR19GABbrnc)
- [YouTube: Playlist of other databricks videos](https://youtube.com/playlist?list=PL9HYL-VRX0oR-3AgWbXtlfdr29626EjRJ&si=pmer_351dBj9Emm4)

:::

:::{.card title="Snowflake"}

**Environments**:

- Posit Team: <https://palm.ptd.posit.it>
- Snowflake: <https://app.snowflake.com/duloftf/posit_software_pbc_dev/#/homepage>

**Example code**:

- Snowflake demo repo: <https://github.com/sol-eng/snowflake_demo>
- Internal Posit Snowflake docs: <https://connect.posit.it/snowflake/>

**Posit Docs**:

- Posit Workbench > **User** Guide > Integrations > Snowflake Native App (preview): <https://docs.posit.co/ide/server-pro/user/2024.09.0/posit-workbench/managed-credentials/snowflake.html> 
- Posit Workbench > **Admin** Guide > Integrations > Snowflake Native App (preview): <https://docs.posit.co/ide/server-pro/2024.09.0/integration/snowflake/native-app/>
- Architecture diagrams from James: <https://docs.google.com/presentation/d/1mTuZMkx9o9gMtrBNaVJ_PFmiUB-7yxqBfS2FUH6IuG4/edit#slide=id.g28740c4c710_0_200>
- RevOrg Confluence page: <https://positpbc.atlassian.net/wiki/spaces/REV/pages/1021509633/Snowflake+Posit+Workbench+Native+App>

**Other resources**:

- Snowflake quick start: [Analyze Data with R using Posit Workbench and Snowflake](https://quickstarts.snowflake.com/guide/analyze_data_with_r_using_posit_workbench_and_snowflake/index.html#0)
- Snowflake solutions center: <https://developers.snowflake.com/solution/data-analysis-with-r-using-posit-workbench-and-snowflake/>
:::

:::{.card title="AWS"}

**Environments**:

- Sagemaker (latest environment shared by Katie on 2024-10-28): <https://studio-d-nqjsae0kldvf.studio.us-east-2.sagemaker.aws/home?tab=Overview>

**Repos**:

- SagemakerDemo: <https://github.com/sol-eng/SagemakerDemo>

**Docs**:

From Posit:

- <https://www.rstudio.com/sagemaker/>

From AWS SageMaker:

- <https://docs.aws.amazon.com/sagemaker/latest/dg/rstudio.html>
- [Get started with RStudio on Amazon SageMaker](https://aws.amazon.com/blogs/machine-learning/get-started-with-rstudio-on-amazon-sagemaker/) (AWS Docs)
- [Manage RStudio on Amazon SageMaker](https://docs.aws.amazon.com/sagemaker/latest/dg/rstudio-manage.html) (AWS Docs)
- [Use RStudio on Amazon SageMaker](https://docs.aws.amazon.com/sagemaker/latest/dg/rstudio-use.html) (AWS Docs)

:::

:::{.card title="Azure"}

**Environments**:

**Repos**:

**Docs**

- <https://www.rstudio.com/azure-ml/>
- [Announcing RStudio for Microsoft Azure ML](https://cloud.rstudio.com/blog/announcing-rstudio-for-azure-ml/)
- [Add RStudio to Azure ML](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-create-manage-compute-instance?tabs=python#add-custom-applications-such-as-rstudio-preview) (Azure Docs)
- [Azure Marketplace](https://azuremarketplace.microsoft.com/en-us/marketplace/apps?search=RStudio&page=1)
    - [RStudio Workbench Standard for Azure](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/rstudio-5237862.rstudioserverprostandard)
    - [RStudio Connect](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/rstudio-5237862.rstudio-connect)
    - [FAQ for RStudio Connect Azure](https://support.rstudio.com/hc/en-us/articles/360022703493-FAQ-for-RStudio-Connect-Azure)

:::

::: {.card title="GCP"}
:::

:::{.card title="Other"}

**Tableau**:

- <https://github.com/SamEdwardes/rstudio-demos/tree/main/apis/plumber-tableau-penguins>

:::

### Column <> Docs {.tabset}

:::{.card title="General"}

**General**

- Docs: <https://docs.posit.co>
- Feature Matrix: <https://connect.posit.it/feature-matrix/>

**Architecture diagrams**

- Pharos: <https://pub.demo.posit.team/pharos-app/>
- Choose the right architecture: <https://solutions.posit.co/architecting/>

**Kubernetes**

- Helm charts: <https://github.com/rstudio/helm>
- DockerHub: <https://hub.docker.com/u/rstudio>
- Docker images: <https://github.com/rstudio/rstudio-docker-products>

**Favourite Articles**

- Sizing reccomendations: <https://support.posit.co/hc/en-us/articles/115002344588-Configuration-and-sizing-recommendations>
- How to submit a support ticket: <https://support.posit.co/hc/en-us/articles/360004788294-How-do-I-submit-a-Support-ticket>

:::

:::{.card title="Workbench"}

- All docs: <https://docs.posit.co/pwb/documentation.html>
- Admin Guide: <https://docs.posit.co/ide/server-pro/>
- User Guide: <https://docs.posit.co/ide/server-pro/user/>
- Choose the right architecture: <https://solutions.posit.co/architecting/architectures/pwb/>
- Reference architectures: <https://github.com/rstudio/rstudio-ide-automation/tree/main>
    - Single server: `fuzzbucket`
    - EKS: `pulumi/eks-reference`
- Helm: <https://github.com/rstudio/helm/tree/main/charts/rstudio-workbench>
- Support ticket:
    - Server: <https://docs.posit.co/support.html>
    - K8s: <https://docs.posit.co/ide/server-pro/getting_started/installation/kubernetes_installation.html#opening-a-support-ticket>

:::

:::{.card title="Connect"}

- All docs: <https://docs.posit.co/connect/>
- Admin Guide: <https://docs.posit.co/connect/admin/>
- User Guide: <https://docs.posit.co/connect/user/>
- Configuration: <https://docs.posit.co/connect/admin/appendix/configuration/>
- Choose the right architecture: <https://solutions.posit.co/architecting/architectures/pct/>
- Reference architecture: <https://github.com/posit-dev/connect-architectures>
- Helm: <https://github.com/rstudio/helm/tree/main/charts/rstudio-connect>
- Support ticket:
    - Server: <https://docs.posit.co/support.html>
    - K8s: <https://docs.posit.co/connect/admin/appendix/off-host/support/>

:::

:::{.card title="Package Mananger"}

- All docs: <>
- Admin Guide: <>
- User Guide: <>
- Configuration: <>
- Choose the right architecture: <https://solutions.posit.co/architecting/architectures/ppm/>
- Reference architecture: <https://github.com/rstudio/architectures-package-manager> 
- Helm: <https://github.com/rstudio/helm/tree/main/charts/rstudio-pm>
- Support ticket:
    - Server: <https://docs.posit.co/support.html>
    - K8s: <>

:::

# Alias

## Row {.tabset}

:::{.card title="Workbench"}

With sudo:

```{.bash}
# Edit configuration files for Workbench
config_pw(){
        sudo vi /etc/rstudio/"$1";  unset -f config_rsw;
};
# Show logs for both rstudio-server and rstudio-launcher
logs_pw(){
        sudo sh -c 'GREEN="\033[0;32m" && NC="\033[0m" && echo -e ${GREEN}"\n Posit Workbench Logs:\n"${NC} && tail -n 15 /var/log/rstudio/rstudio-server/rserver.log && echo -e ${GREEN}"\n Posit Launcher Logs:\n"${NC} && tail -n 15 
/var/log/rstudio/launcher/rstudio-launcher.log'
};
alias config=config_pw
alias restart="sudo sh -c '/usr/sbin/rstudio-server stop && /usr/bin/rstudio-launcher stop && /usr/bin/rstudio-launcher start && /usr/sbin/rstudio-server start && sleep 2 && systemctl --no-pager -l status rstudio-server && systemctl --no-pager -l status rstudio-launcher'"
alias status="sudo sh -c 'systemctl --no-pager -l status rstudio-server && systemctl --no-pager -l status rstudio-launcher'"
alias stop="sudo sh -c '/usr/sbin/rstudio-server stop && /usr/bin/rstudio-launcher stop'"
alias start="sudo sh -c '/usr/bin/rstudio-launcher start && /usr/sbin/rstudio-server start && sleep 2 && systemctl --no-pager -l status rstudio-server && systemctl --no-pager -l status rstudio-launcher'"
alias diagnostic="sudo sh -c '/usr/sbin/rstudio-server run-diagnostics'"
alias license-status="sudo sh -c '/usr/sbin/rstudio-server license-manager status'"
alias logs=logs_pw
```

As root:

```bash
alias config='f(){ vi /etc/rstudio/"$1";  unset -f f; }; f'
alias restart="/usr/sbin/rstudio-server stop && /usr/bin/rstudio-launcher stop && /usr/bin/rstudio-launcher start && /usr/sbin/rstudio-server start && sleep 2 && systemctl --no-pager -l status rstudio-server && systemctl --no-pager -l status rstudio-launcher"
alias status="systemctl --no-pager -l status rstudio-server && systemctl --no-pager -l status rstudio-launcher"
alias stop="/usr/sbin/rstudio-server stop && /usr/bin/rstudio-launcher stop"
alias start="/usr/bin/rstudio-launcher start && /usr/sbin/rstudio-server start && sleep 2 && systemctl --no-pager -l status rstudio-server && systemctl --no-pager -l status rstudio-launcher"
alias diagnostic="/usr/sbin/rstudio-server run-diagnostics"
alias license-status="/usr/sbin/rstudio-server license-manager status"
alias logs='GREEN="\033[0;32m" && NC="\033[0m" && echo -e ${GREEN}"\n Posit Workbench Logs:\n"${NC} && tail -n 15 /var/log/rstudio/rstudio-server/rserver.log && echo -e ${GREEN}"\n Posit Launcher Logs:\n"${NC} && tail -n 15 /var/log/rstudio/launcher/rstudio-launcher.log'
```
:::

:::{.card title="Connect"}
With sudo:

```bash
# Show nicely formatted logs for Connect
logs_pc(){
        sudo sh -c 'GREEN="\033[0;32m" && NC="\033[0m" && echo -e ${GREEN}"\n Posit Connect Logs:\n"${NC} && tail -n 15 /var/log/rstudio/rstudio-connect/rstudio-connect.log'
};

alias config="sudo sh -c 'vi /etc/rstudio-connect/rstudio-connect.gcfg'"
alias restart="sudo sh -c 'systemctl restart rstudio-connect && sleep 2 && systemctl --no-pager -l status rstudio-connect'"
alias status="sudo sh -c 'systemctl --no-pager -l status rstudio-connect'"
alias stop="sudo sh -c 'systemctl stop rstudio-connect'"
alias start="sudo sh -c 'systemctl start rstudio-connect && sleep 2 && systemctl --no-pager -l status rstudio-connect'"
alias diagnostic="sudo sh -c '/opt/rstudio-connect/scripts/run-diagnostics.sh ~/'"
alias license-status="sudo sh -c '/opt/rstudio-connect/bin/license-manager status'"
alias logs=logs_pc
```

As root:

```bash
alias config="vi /etc/rstudio-connect/rstudio-connect.gcfg"
alias restart="systemctl restart rstudio-connect && sleep 2 && systemctl --no-pager -l status rstudio-connect"
alias status="systemctl --no-pager -l status rstudio-connect"
alias stop="systemctl stop rstudio-connect"
alias start="systemctl start rstudio-connect && sleep 2 && systemctl --no-pager -l status rstudio-connect"
alias diagnostic="/opt/rstudio-connect/scripts/run-diagnostics.sh ~/"
alias license-status="/opt/rstudio-connect/bin/license-manager status"
alias logs='GREEN="\033[0;32m" && NC="\033[0m" && echo -e ${GREEN}"\n Posit Connect Logs:\n"${NC} && tail -n 15 /var/log/rstudio/rstudio-connect/rstudio-connect.log'
```
:::

:::{.card title="Package Manager"}
With sudo:

```bash
# Show nicely formatted logs for Package Manager
logs_pm(){
        sudo sh -c 'GREEN="\033[0;32m" && NC="\033[0m" && echo -e ${GREEN}"\n Posit Package Manager Logs:\n"${NC} && tail -n 15 /var/log/rstudio/rstudio-pm/rstudio-pm.log'
}

alias config="sudo sh -c 'vi /etc/rstudio-pm/rstudio-pm.gcfg'"
alias restart="sudo sh -c 'systemctl restart rstudio-pm && sleep 2 && systemctl --no-pager -l status rstudio-pm'"
alias status="sudo sh -c 'systemctl --no-pager -l status rstudio-pm'"
alias stop="sudo sh -c 'systemctl stop rstudio-pm'"
alias start="sudo sh -c 'systemctl start rstudio-pm && sleep 2 && systemctl --no-pager -l status rstudio-pm'"
alias diagnostic="sudo sh -c '/opt/rstudio-pm/bin/run-diagnostics'"
alias license-status="sudo sh -c '/opt/rstudio-pm/bin/license-manager status'"
alias logs=logs_pm
alias cran-setup="sudo sh -c '/opt/rstudio-pm/bin/rspm create repo --name=cran --description=Access-CRAN-packages && /opt/rstudio-pm/bin/rspm subscribe --repo=cran --source=cran && /opt/rstudio-pm/bin/rspm sync --type=cran &'"
alias pypi-setup="sudo sh -c '/opt/rstudio-pm/bin/rspm create repo --name=pypi --type=python --description=Access-PyPI-packages && /opt/rstudio-pm/bin/rspm subscribe --repo=pypi --source=pypi && nohup /opt/rstudio-pm/bin/rspm sync --type=pypi &'"
alias rspm="sudo sh -c '/opt/rstudio-pm/bin/rspm'"
```

As root:

```bash
alias config="vi /etc/rstudio-pm/rstudio-pm.gcfg"
alias restart="systemctl restart rstudio-pm && sleep 2 && systemctl --no-pager -l status rstudio-pm"
alias status="systemctl --no-pager -l status rstudio-pm"
alias stop="systemctl stop rstudio-pm"
alias start="systemctl start rstudio-pm && sleep 2 && systemctl --no-pager -l status rstudio-pm"
alias diagnostic="/opt/rstudio-pm/bin/run-diagnostics"
alias license-status="/opt/rstudio-pm/bin/license-manager status"
alias logs='GREEN="\033[0;32m" && NC="\033[0m" && echo -e ${GREEN}"\n Posit Package Manager Logs:\n"${NC} && tail -n 15 /var/log/rstudio/rstudio-pm/rstudio-pm.log'
alias cran-setup="/opt/rstudio-pm/bin/rspm create repo --name=cran --description='Access CRAN packages' && /opt/rstudio-pm/bin/rspm subscribe --repo=cran --source=cran && /opt/rstudio-pm/bin/rspm sync --type=cran &"
alias pypi-setup="/opt/rstudio-pm/bin/rspm create repo --name=pypi --type=python --description='Access PyPI packages' && /opt/rstudio-pm/bin/rspm subscribe --repo=pypi --source=pypi && nohup /opt/rstudio-pm/bin/rspm sync --type=pypi &"
alias rspm="/opt/rstudio-pm/bin/rspm"
```
:::

## Row

See <https://positpbc.atlassian.net/wiki/spaces/SE/pages/289538176/Linux+Command+Aliases> for Sam Cofer's copy.

# Go Live

🚧 Work in progress

## Row {.tabset}

:::{.card title="Workbench"}

- [ ] Do this
- [ ] Do this

:::

:::{.card title="Connect"}

- [ ] Do this
- [ ] Do this

:::

:::{.card title="Package Manager"}

- [ ] Do this
- [ ] Do this

:::

# About

This is a dashboard I use to keep track of all the assets I may need for a demo. The source code is here: <https://github.com/SamEdwardes/rstudio-demos/tree/main/documents/quarto-dashboard-demo-landing-page>.
