---
title: Example of Connecting to Databricks SQL Warehouse
jupyter: python3
---

```{python}
#| vscode: {languageId: python}
import os

import polars as pl
import plotly.express as px
from databricks import sql
from databricks.sdk.core import ApiClient, Config
from databricks.sdk.service.iam import CurrentUserAPI
from dotenv import load_dotenv
from loguru import logger

from rich import inspect

load_dotenv()
```

## Configuration

Create the Databricks configuration.

```{python}
#| vscode: {languageId: python}
if os.environ.get("WORKBENCH_WEB_BASE_URL"):
    logger.info("Running in Posit Workbench")
    cfg = Config(profile="workbench")
    
elif os.environ.get("POSIT_PRODUCT") == "CONNECT":
    logger.info("Running in Posit Connect")
    raise ValueError("Example not yet implemented. Need to set up a Databricks Service Account OAuth integration in Connect for rendered content.")

else:
    raise ValueError("Not running in Posit Workbench or Posit Connect.")
```

```{python}
#| vscode: {languageId: python}
databricks_user = CurrentUserAPI(ApiClient(cfg)).me()
inspect(databricks_user)
```

## SQL Warehouse

Establish a connection to Databricks

```{python}
#| vscode: {languageId: python}
con = sql.connect(
    server_hostname=cfg.host,
    http_path=os.environ.get("SQL_HTTP_PATH", "/sql/1.0/warehouses/e985c33f1db7502f"),
    access_token=cfg.token
)

inspect(con)
```

```{python}
#| vscode: {languageId: python}
sql_query = """
SELECT *
FROM `sol_eng_demo_nickp`.`default`.`lending_club`
LIMIT 100;
"""

df = (
    pl
    .read_database(sql_query, con)
    .with_columns(
        pl.col("loan_amnt", "funded_amnt", "funded_amnt_inv", "revol_bal").cast(pl.Int64),
        pl.col("installment", "annual_inc", "out_prncp", "out_prncp_inv", "total_pymnt").cast(pl.Float64),
        pl.col("int_rate", "revol_util").str.replace("%", "").cast(pl.Float64) / 100
    )
)

df
```

```{python}
#| vscode: {languageId: python}
px.histogram(df, x="loan_amnt")
```

